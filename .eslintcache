[{"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\index.js":"1","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\App.js":"2","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\reportWebVitals.js":"3","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Footer\\Footer.js":"5","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductPage\\ProductPage.js":"6","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\storeFront\\storeFront.js":"7","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\itemView\\itemView.js":"8","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Price.js":"9","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\filters\\filters.js":"10","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Pagination\\Pagination.js":"11","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\AboutUs\\AboutUs.js":"12","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Homepage\\Homepage.js":"13","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Blog\\Blog.js":"14","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\SignUp\\SignUp.js":"16","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\NotFound\\NotFound.js":"17","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ContactUs\\ContactUs.js":"18","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Stars.js":"19","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Pecent.js":"20","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductSlider\\ProductSlider.js":"21","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\HeaderSlider\\HeaderSlider.js":"22","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductQuickview\\ProductQuickview.js":"23","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\shoppingCart\\ShoppingCart.js":"24","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ItemsToBuy\\ItemsToBuy.js":"25","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\CheckoutDetails\\CheckoutDetails.js":"26","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\CartQuickView\\CartQuickView.js":"27","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Checkout\\Checkout.js":"28","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FirstForm\\FirstForm.js":"29","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FinalDetails\\FinalDetails.js":"30","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FinalForm\\FinalForm.js":"31","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Confirmation\\Confirmation.js":"32","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Map\\Map.js":"33"},{"size":588,"mtime":1612363247148,"results":"34","hashOfConfig":"35"},{"size":6408,"mtime":1613502937103,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":6432,"mtime":1613501550518,"results":"38","hashOfConfig":"35"},{"size":4925,"mtime":1613501370425,"results":"39","hashOfConfig":"35"},{"size":15080,"mtime":1613502041184,"results":"40","hashOfConfig":"35"},{"size":5821,"mtime":1613502147822,"results":"41","hashOfConfig":"35"},{"size":4290,"mtime":1613501806125,"results":"42","hashOfConfig":"35"},{"size":171,"mtime":1612445781429,"results":"43","hashOfConfig":"35"},{"size":4164,"mtime":1613500453161,"results":"44","hashOfConfig":"35"},{"size":1877,"mtime":1612955888698,"results":"45","hashOfConfig":"35"},{"size":1778,"mtime":1613499506752,"results":"46","hashOfConfig":"35"},{"size":1302,"mtime":1612991290424,"results":"47","hashOfConfig":"35"},{"size":275,"mtime":1612358140066,"results":"48","hashOfConfig":"35"},{"size":1945,"mtime":1613501842030,"results":"49","hashOfConfig":"35"},{"size":284,"mtime":1612358263666,"results":"50","hashOfConfig":"35"},{"size":324,"mtime":1612361664340,"results":"51","hashOfConfig":"35"},{"size":10181,"mtime":1613500369656,"results":"52","hashOfConfig":"35"},{"size":351,"mtime":1612950265014,"results":"53","hashOfConfig":"35"},{"size":405,"mtime":1612972087938,"results":"54","hashOfConfig":"35"},{"size":3087,"mtime":1613502108926,"results":"55","hashOfConfig":"35"},{"size":3556,"mtime":1612950813340,"results":"56","hashOfConfig":"35"},{"size":2997,"mtime":1613502075238,"results":"57","hashOfConfig":"35"},{"size":1122,"mtime":1612976946561,"results":"58","hashOfConfig":"35"},{"size":6033,"mtime":1613501712128,"results":"59","hashOfConfig":"35"},{"size":4445,"mtime":1613500296239,"results":"60","hashOfConfig":"35"},{"size":4113,"mtime":1613500149376,"results":"61","hashOfConfig":"35"},{"size":954,"mtime":1613500163247,"results":"62","hashOfConfig":"35"},{"size":29050,"mtime":1613501293913,"results":"63","hashOfConfig":"35"},{"size":5247,"mtime":1613500091069,"results":"64","hashOfConfig":"35"},{"size":5406,"mtime":1613500537816,"results":"65","hashOfConfig":"35"},{"size":809,"mtime":1613503123084,"results":"66","hashOfConfig":"35"},{"size":3737,"mtime":1613499482355,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ay9q8u",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\index.js",[],["138","139"],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\App.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\reportWebVitals.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductPage\\ProductPage.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\storeFront\\storeFront.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\itemView\\itemView.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Price.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\filters\\filters.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Pagination\\Pagination.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\AboutUs\\AboutUs.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Homepage\\Homepage.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Blog\\Blog.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\SignUp\\SignUp.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\NotFound\\NotFound.js",[],["140","141"],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ContactUs\\ContactUs.js",["142"],"import React, { Component } from 'react';\r\nimport Map from '../Map/Map';\r\nimport './Contact.css';\r\n\r\nclass ContactUs extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nameTxt: null,\r\n            email: null,\r\n            msgTtl: null,\r\n            msgBody: null,\r\n            errorMessage:null\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.target.reset();\r\n        this.setState({\r\n            errorMessage: \r\n                <h1 className=\"text-3xl text-green-700 text-center pb-5 pt-5\">\r\n                    <i className=\"fas fa-check-circle\" /> \r\n                    Message has been sent\r\n                </h1>\r\n        })\r\n        setTimeout(() => {\r\n            event.target.style.border =  \"0\"; \r\n            this.setState({\r\n                errorMessage:null\r\n            })\r\n        }, 10000);\r\n        this.resetStates();\r\n    }\r\n\r\n    resetStates = () => {\r\n        this.setState({\r\n            nameTxt: null,\r\n            email: null,\r\n            msgBody: null,\r\n            msgTtl: null,\r\n        })\r\n    }\r\n\r\n    validateMessage = (event) => {\r\n        let inputId = event.target.id;\r\n        let validation;\r\n        let res;\r\n        let exp;\r\n        switch(inputId) {\r\n            case \"nameTxt\":\r\n                validation = /^[a-zA-Z\\s]*$/;  \r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Name can only contain letters and spaces!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"4px solid #9CA3AF\"; \r\n                        this.setState({\r\n                            errorMessage:null\r\n                        })\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        nameTxt: event.target.value\r\n                    })\r\n                }\r\n                break;\r\n            case \"email\":\r\n                validation = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Pleaese enter a valid email address!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"4px solid #9CA3AF\"; \r\n                        this.setState({\r\n                            errorMessage:null\r\n                        })\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        email: event.target.value\r\n                    })\r\n                }\r\n                break;\r\n            case \"msgTtl\":\r\n                exp = event.target.value\r\n                if (exp.length < 5) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                The title must contain at least 5 notes\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"4px solid #9CA3AF\"; \r\n                        this.setState({\r\n                            errorMessage:null\r\n                        })\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        msgTtl: event.target.value\r\n                    })\r\n                }\r\n                break;\r\n            case \"msgBody\":\r\n                exp = event.target.value\r\n                if (exp.length < 10) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                The message body must contain at least 10 notes\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"4px solid #9CA3AF\"; \r\n                        this.setState({\r\n                            errorMessage:null\r\n                        })\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        msgBody: event.target.value\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let btn;\r\n        if (this.state.nameTxt !== null && this.state.email !== null && this.state.msgTtl !== null && this.state.msgBody !== null) {\r\n            btn = \r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Send Message\" \r\n                    className=\"py-2 px-4 bg-yellow-100 border-2 border-yellow-700 text-yellow-700 hover:bg-yellow-700 hover:text-yellow-100 rounded mb-6\"\r\n                />\r\n        } else {\r\n            btn = \r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Send Message\" \r\n                    className=\"py-2 px-4 bg-yellow-100 border-2 border-yellow-700 text-yellow-700 rounded mb-6 opacity-60\"\r\n                />\r\n        }\r\n\r\n        return(    \r\n            <main className=\"ContactUs p-4\">\r\n                <h1 className=\"text-center text-5xl py-5 font-medium text-yellow-500\">\r\n                    Contact Us!\r\n                </h1>\r\n                <div className=\"text-2xl text-gray-200 text-center pb-10\">\r\n                    <p>\r\n                        <span className=\"text-yellow-600 text-3xl\">At</span> FUNNYBOOKS\r\n                        <br/>\r\n                        Sit amet 48 consectetur 13553\r\n                        <br/>\r\n                        Quisque aliquam, Proin\r\n                        <br/>\r\n                        Tel.: 077-8956434\r\n                    </p>\r\n                </div>\r\n                <Map/>\r\n                <h1 className=\"text-center text-4xl py-5 font-medium text-yellow-500\">Send us a message</h1>\r\n                <div className=\"w-1/2 mx-auto bg-gray-300 text-2xl rounded border-4 border-gray-500 text-center mb-5\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.state.errorMessage}\r\n                        <div className=\"grid gap-5 grid-cols-2 grid-row-4 pt-4\">\r\n                            <div className=\"col-span-1 text-center\"> \r\n                                <label htmlFor=\"nameTxt\">Name:</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"nameTxt\" \r\n                                    className=\"w-72 border-4 border-gray-400\" \r\n                                    onBlur={(event) => {this.validateMessage(event)}} \r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-span-1 text-center\">\r\n                                <label htmlFor=\"email\">Email:</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id=\"email\" \r\n                                    className=\"w-72 border-4 border-gray-400\" \r\n                                    onBlur={(event) => {this.validateMessage(event)}} \r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-span-2 text-center\">\r\n                                <label htmlFor=\"msgTtl\">Message Title:</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"msgTtl\" \r\n                                    className=\"border-4 border-gray-400\" \r\n                                    style={{width: '780px'}} \r\n                                    onBlur={(event) => {this.validateMessage(event)}} \r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-span-2 row-span-2 text-center\">\r\n                                <textarea \r\n                                    id=\"msgBody\" \r\n                                    className=\"border-4 border-gray-400 mb-4\" \r\n                                    style={{\r\n                                        width: '880px', \r\n                                        height: '200px', \r\n                                        paddingTop: '0', \r\n                                        resize: 'none'\r\n                                    }} \r\n                                    placeholder=\"Please enter your message\"\r\n                                    onBlur={(event) => {this.validateMessage(event)}} \r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {btn}\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactUs;","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Stars.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\utility\\Pecent.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductSlider\\ProductSlider.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\HeaderSlider\\HeaderSlider.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ProductQuickview\\ProductQuickview.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\shoppingCart\\ShoppingCart.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\ItemsToBuy\\ItemsToBuy.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\CheckoutDetails\\CheckoutDetails.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\CartQuickView\\CartQuickView.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Checkout\\Checkout.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FirstForm\\FirstForm.js",["143"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './FirstForm.css';\r\n\r\nclass FirstForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRed = React.createRef();\r\n        this.state = {\r\n            val: null,\r\n            input: null,\r\n            page: 1,\r\n            errorMessage: null,\r\n            fullName: null,\r\n            phoneNum: null,\r\n            email: null,\r\n            offers: \"none\",\r\n            firstName: null,\r\n            lastName: null,\r\n            fullAd: null,\r\n            zipCode: null,\r\n            city: null,\r\n            notes: \"none\",\r\n            payment: null,\r\n            cardNum: null,\r\n            security: null,\r\n            expDate: null,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.changePageForward = this.changePageForward.bind(this)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.target.reset();\r\n        this.changePageForward();\r\n    }\r\n\r\n    validateContent = (event) => {\r\n        let inputId = event.target.id;\r\n        let validation;\r\n        let res;\r\n        let exp;\r\n        switch(inputId) {\r\n            case \"fullName\":\r\n                validation = /^[a-zA-Z\\s]*$/;  \r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Name can only contain letters and spaces!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        fullName: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"fullName\",this.state.fullName)\r\n                    })\r\n                }\r\n                break;\r\n            case \"phoneNum\":\r\n                validation = /^[0-9]{2,3}-[0-9]{7}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Phone number can only contain 9 or 10 digits in the specified format!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        phoneNum: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"phoneNum\",this.state.phoneNum)\r\n                    })\r\n                }\r\n                break;\r\n            case \"email\":\r\n                validation = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Pleaese enter a valid email address!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        email: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"email\",this.state.email)\r\n                    })\r\n                }\r\n                break;\r\n            case \"ads\":\r\n                if (this.state.offers === \"none\") {\r\n                    this.setState({\r\n                        offers: \"yes\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"offers\",this.state.offers)\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        offers: \"none\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"offers\",this.state.offers)\r\n                    })\r\n                }\r\n                break;\r\n            case \"firstName\":\r\n                validation = /^[a-zA-Z\\s]*$/;\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Names can only contain letters and spaces!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        firstName: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"firstName\",this.state.firstName)\r\n                    })\r\n                }\r\n                break;\r\n            case \"lastName\":\r\n                validation = /^[a-zA-Z\\s]*$/;\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Names can only contain letters and spaces!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        lastName: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"lastName\",this.state.lastName)\r\n                    })\r\n                }\r\n                break;\r\n            case \"fullAddress\":\r\n                exp = event.target.value\r\n                if (exp === \"\") {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Please enter a valid address!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        fullAd: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"fullAd\",this.state.fullAd)\r\n                    })\r\n                }\r\n                break;\r\n            case \"zipCode\":\r\n                validation = /^[0-9]{5}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                A zip code can only contain 5 digits!\r\n                            </h1>\r\n                        })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        zipCode: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"zipCode\",this.state.zipCode)\r\n                    })\r\n                }\r\n                break;\r\n            case \"city\":\r\n                validation = /^[a-zA-Z\\s]*$/;\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                City names can only contain letters and spaces!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        city: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"city\",this.state.city)\r\n                    })\r\n                }\r\n                break;\r\n            case \"notes\":\r\n                exp = event.target.value\r\n                if (exp !== \"\") {\r\n                    this.setState({\r\n                        notes: exp,\r\n                    },() => {\r\n                        this.props.addToOrder(\"notes\",this.state.notes)\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notes: \"none\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"notes\",this.state.notes)\r\n                    })\r\n                }\r\n                break;\r\n            case \"cash\":\r\n                if (this.state.payment !== \"cash\") {\r\n                    this.setState({\r\n                        payment: \"cash\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"payment\",this.state.payment)\r\n                    })\r\n                }\r\n                break;\r\n            case \"credit\":\r\n                if (this.state.payment !== \"credit\") {\r\n                    this.setState({\r\n                        payment: \"credit\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"payment\",this.state.payment)\r\n                    })\r\n                }\r\n                break;\r\n            case \"paypal\":\r\n                if (this.state.payment !== \"paypal\") {\r\n                    this.setState({\r\n                        payment: \"paypal\"\r\n                    },() => {\r\n                        this.props.addToOrder(\"payment\",this.state.payment)\r\n                    })\r\n                }\r\n                break;\r\n            case \"cardNum\":\r\n                validation = /^[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Please enter a valid credit card number in the specified format!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        cardNum: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"cardNum\",this.state.cardNum)\r\n                    })\r\n                }\r\n                break;\r\n            case \"security\":\r\n                validation = /^[0-9]{3}$/\r\n                exp = event.target.value\r\n                res = validation.test(exp)\r\n                if (!res) {\r\n                    event.target.style.border =  \"5px solid red\"\r\n                    this.setState({\r\n                        errorMessage: \r\n                            <h1 className=\"text-3xl text-red-600 text-center pb-5 pt-5\"> \r\n                                Security code includes 3 digits only!\r\n                            </h1>\r\n                    })\r\n                    setTimeout(() => {\r\n                        event.target.style.border =  \"0\"; \r\n                        this.setState({errorMessage:null})\r\n                    }, 10000);\r\n                } else {\r\n                    this.setState({\r\n                        security: event.target.value\r\n                    },() => {\r\n                        this.props.addToOrder(\"security\",this.state.security)\r\n                    })\r\n                }\r\n                break;\r\n            case \"expDate\":\r\n                exp = event.target.value\r\n                this.setState({\r\n                    expDate: exp,\r\n                },() => {\r\n                    this.props.addToOrder(\"expDate\",this.state.expDate)\r\n                })\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n    }\r\n\r\n    changePageForward = () => {\r\n        let curPage = this.state.page\r\n        switch (curPage) {\r\n            case 1:\r\n                this.setState({page:2})\r\n                break;\r\n            case 2:\r\n                this.setState({page:3})\r\n                break;\r\n            case 3:\r\n                this.setState({page:4})\r\n                break;\r\n            default:\r\n                this.setState({page:1})\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n  render () {\r\n    let payment;\r\n    let year = new Date().getFullYear()\r\n    let month = (new Date().getMonth()) + 1\r\n    if (month < 10) {\r\n        month = `0${month}`\r\n    }\r\n    let thisDate = `${year}-${month}`\r\n    if (this.state.payment === \"credit\") {\r\n        payment = (\r\n            <div className=\"mb-2\">\r\n                <div className=\"mb-2\">\r\n                    <label htmlFor=\"cardNum\">Credit Card Number: </label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"cardNum\" \r\n                        placeholder=\"XXXXX-XXXX-XXXX-XXXX\" \r\n                        onBlur={(event) => {this.validateContent(event)}}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <label htmlFor=\"security\">Security Code: </label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"security\" \r\n                        className=\"w-16\" \r\n                        onBlur={(event) => {this.validateContent(event)}}\r\n                    />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <label htmlFor=\"expDate\">Expiration Date: </label>\r\n                    <input \r\n                        type=\"month\" \r\n                        id=\"expDate\" \r\n                        className=\"w-36 text-lg\" \r\n                        onBlur={(event) => {this.validateContent(event)}} \r\n                        min={thisDate} \r\n                        defaultValue={thisDate}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let basicsBtn;\r\n    if (this.state.fullName !== null && this.state.phoneNum !== null && this.state.email !== null) {\r\n        basicsBtn = \r\n            <input \r\n                type=\"submit\" \r\n                value=\"PROCEED\" \r\n                className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 hover:bg-yellow-100 hover:text-yellow-800 border border-yellow-800\"\r\n            />\r\n    } else {\r\n        basicsBtn = \r\n            <input \r\n                type=\"submit\" \r\n                value=\"PROCEED\" \r\n                className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 border border-yellow-800 opacity-50\" \r\n                disabled\r\n            />\r\n    }\r\n\r\n    let addressBtn;\r\n    if (this.state.firstName !== null && this.state.lastName !== null && this.state.fullAd !== null && this.state.zipCode !== null && this.state.city !== null) {\r\n        addressBtn = \r\n            <input \r\n                type=\"submit\" \r\n                value=\"PROCEED\" \r\n                className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 hover:bg-yellow-100 hover:text-yellow-800 border border-yellow-800\"\r\n            />\r\n    } else {\r\n        addressBtn = \r\n            <input \r\n                type=\"submit\" \r\n                value=\"PROCEED\" \r\n                className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 border border-yellow-800 opacity-50\" \r\n                disabled\r\n            />\r\n    }\r\n\r\n    let finalBtn;\r\n    if (this.state.payment !== null && this.props.delivery !== null) {\r\n        if (this.state.payment === \"credit\") {\r\n            if (this.state.cardNum !== null && this.state.expDate !== null && this.state.security !== null) {\r\n                finalBtn = \r\n                    <Link to=\"/finalstage\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"ORDER\" \r\n                            className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 hover:bg-yellow-100 hover:text-yellow-800 border border-yellow-800\"\r\n                        />\r\n                    </Link>\r\n            } else {\r\n                finalBtn = \r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"ORDER\" \r\n                        className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 border border-yellow-800 opacity-50\" \r\n                        disabled\r\n                    />\r\n            }\r\n        } else {\r\n            finalBtn = \r\n                <Link to=\"/finalstage\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"ORDER\" \r\n                        className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 hover:bg-yellow-100 hover:text-yellow-800 border border-yellow-800\"\r\n                    />\r\n                </Link>\r\n        }\r\n    } else {\r\n        finalBtn = \r\n            <input \r\n                type=\"submit\" \r\n                value=\"ORDER\" \r\n                className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 border border-yellow-800 opacity-50\" \r\n                disabled\r\n            />\r\n    }\r\n\r\n    let page;\r\n    switch(this.state.page) {\r\n        case 2:\r\n            page = (\r\n                <div className=\"basics bg-gray-300 rounded mx-48 my-48 text-3xl border-solid border-8 border-gray-400\">\r\n                    <h1 className=\"text-5xl text-yellow-600 py-4 font-bold\">Personal Details</h1>\r\n                    {this.state.errorMessage}\r\n                    <form onSubmit={this.handleSubmit} className=\"mb-6\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"fullName\">Full Name: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"fullName\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"phoneNum\">Phone Number: </label>\r\n                            <input \r\n                                type=\"tel\" \r\n                                id=\"phoneNum\" \r\n                                placeholder=\"XXX-XXXXXXX\" \r\n                                pattern=\"[0-9]{2,3}-[0-9]{7}\" \r\n                                required \r\n                                className=\"pl-2\" \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"email\">Email: </label>\r\n                            <input \r\n                                type=\"email\" \r\n                                id=\"email\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                id=\"ads\" \r\n                                value=\"ads\" \r\n                                onChange={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            <label htmlFor=\"ads\">I would like to recieve news and special offers in my email</label>\r\n                        </div>\r\n                        {basicsBtn}\r\n                    </form>\r\n                </div>\r\n            )\r\n            break;\r\n        case 3:\r\n            page = (\r\n                <div className=\"deliveryDetails bg-gray-300 rounded mx-48 my-48 text-3xl border-solid border-8 border-gray-400\">\r\n                    <h1 className=\"text-5xl text-yellow-600 py-4 font-bold\">Delivery Details</h1>\r\n                    {this.state.errorMessage}\r\n                    <form onSubmit={this.handleSubmit} className=\"mb-6\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"firstName\">First Name: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"firstName\" \r\n                                className=\"w-44\" \r\n                                defaultValue=\"\" \r\n                                required onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <label htmlFor=\"lastName\">Last Name: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"lastName\" \r\n                                className=\"w-44\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"fullAddress\">Full Address: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"fullAddress\" \r\n                                className=\"w-96\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"zipCode\">Zip Code: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"zipCode\" \r\n                                className=\"w-32\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <label htmlFor=\"city\">City: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"city\" \r\n                                className=\"w-32\" \r\n                                required \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"notes\">Notes: </label>\r\n                            <input \r\n                                type=\"textarea\" \r\n                                id=\"notes\" \r\n                                className=\"h-16\" \r\n                                onBlur={(event) => {this.validateContent(event)}}\r\n                            />\r\n                        </div>\r\n                        {addressBtn}\r\n                    </form>\r\n                </div>\r\n            )\r\n            break;\r\n        case 4:\r\n            page = (\r\n                <div className=\"paymentDetails bg-gray-300 rounded mx-48 my-48 text-3xl border-solid border-8 border-gray-400\">\r\n                    <h1 className=\"text-5xl text-yellow-600 py-4 font-bold\">Payment</h1>\r\n                    {this.state.errorMessage}\r\n                    <form onSubmit={this.handleSubmit} className=\"mb-6\">\r\n                        <div className=\"mb-2\">\r\n                            <h1>Choose a payment method: </h1>\r\n                            <input \r\n                                type=\"radio\" \r\n                                id=\"cash\" \r\n                                name=\"payment\" \r\n                                value=\"cash\" \r\n                                required \r\n                                onChange={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            <label htmlFor=\"cash\">Cash</label>\r\n                            <br />\r\n                            <input \r\n                                type=\"radio\" \r\n                                id=\"credit\" \r\n                                name=\"payment\" \r\n                                value=\"credit\" \r\n                                required \r\n                                onChange={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            <label htmlFor=\"credit\">Credit Card</label>\r\n                            <br/>\r\n                            <input \r\n                                type=\"radio\" \r\n                                id=\"paypal\" \r\n                                name=\"payment\" \r\n                                value=\"paypal\" \r\n                                required \r\n                                onChange={(event) => {this.validateContent(event)}}\r\n                            />\r\n                            <label htmlFor=\"paypal\">PayPal</label>\r\n                        </div>\r\n                        {payment}\r\n                        {finalBtn}\r\n                    </form>\r\n                </div>\r\n            )\r\n            break;\r\n        default:\r\n            page = (\r\n                <div className=\"signIn bg-gray-300 rounded mx-48 my-48 text-3xl border-solid border-8 border-gray-400\">\r\n                    <h1 className=\"text-5xl text-yellow-600 py-4 font-bold\">Sign In</h1>\r\n                    <form onSubmit={this.handleSubmit} className=\"mb-6\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"myMail\">Email: </label>\r\n                            <input type=\"email\" id=\"myMail\"/>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"password\">Password: </label>\r\n                            <input type=\"password\" id=\"password\"/>\r\n                        </div>\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"ENTER\" \r\n                            className=\"bg-yellow-800 text-yellow-100 rounded px-4 py-2 hover:bg-yellow-100 hover:text-yellow-800 border border-yellow-800\"\r\n                        />\r\n                    </form>\r\n                    <h1>Not a memebr?</h1>\r\n                    <button \r\n                        className=\"shadow-lg mb-4 bg-yellow-100 rounded px-4 py-2 hover:shadow-none text-yellow-800\" \r\n                        onClick={() => {this.changePageForward()}}\r\n                    >\r\n                        Procceed as a Guest\r\n                    </button>\r\n                </div> \r\n            )\r\n            break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"FirstForm\">\r\n        {page}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FirstForm;","C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FinalDetails\\FinalDetails.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\FinalForm\\FinalForm.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Confirmation\\Confirmation.js",[],"C:\\Users\\Stav\\Desktop\\experis_works\\final project\\newProj\\comic-books-project\\src\\Components\\Map\\Map.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":77,"column":36,"nodeType":"152","messageId":"153","endLine":77,"endColumn":37,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":95,"column":36,"nodeType":"152","messageId":"153","endLine":95,"endColumn":37,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["158","159"],["160","161"],"no-global-assign","no-unsafe-negation",{"messageId":"162","fix":"163","desc":"164"},{"messageId":"165","fix":"166","desc":"167"},{"messageId":"162","fix":"168","desc":"164"},{"messageId":"165","fix":"169","desc":"167"},"removeEscape",{"range":"170","text":"171"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"172","text":"173"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"174","text":"171"},{"range":"175","text":"173"},[2417,2418],"",[2417,2417],"\\",[3409,3410],[3409,3409]]